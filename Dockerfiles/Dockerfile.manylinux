# Use the manylinux2014_x86_64 image as the base
FROM quay.io/pypa/manylinux2014_x86_64:latest@sha256:085b7c2c1bcb45b936e5478fe24a5142b0519e242a0104142fd50d569d6cb922

# Update and install dependencies
RUN /usr/bin/python2 /usr/bin/yum update -y && /usr/bin/python2 /usr/bin/yum install -y dos2unix

RUN yum install -y wget
ADD .github/workflows/manylinux /tmp/manylinux
# ADD ./workflow_scripts /tmp/manylinux/workflow_scripts
# COPY requirements-release.txt /tmp/requirements-release.txt
# COPY requirements-reference.txt /tmp/requirements-reference.txt

RUN chmod +x /tmp/manylinux/entrypoint.sh

WORKDIR /app
ADD . /app

RUN /tmp/manylinux/entrypoint.sh 3.10 manylinux2014_x86_64 pull_request

# RUN /opt/python/cp310-cp310/bin/python -m pip install dist/*manylinux2014_x86_64.whl

# RUN /opt/python/cp310-cp310/bin/python -m pip install -r /tmp/requirements-release.txt



# # Update and install dependencies
# RUN yum update -y && yum install -y openssl openssl-devel

# # Download, compile and install Python with SSL support
# RUN curl -O https://www.python.org/ftp/python/3.10.0/Python-3.10.0.tgz && \
#     tar -xzf Python-3.10.0.tgz && \
#     cd Python-3.10.0 && \
#     ./configure --with-ensurepip=install --with-openssl=/usr/include/openssl && \
#     make && \
#     make install

# # Make Python 3.10 as the default version
# RUN ln -sf /usr/local/bin/python3.10 /usr/bin/python

# # Upgrade pip
# RUN python -m pip install --upgrade pip

# # # RUN python -m pip install -r /tmp/requirements-release.txt

# COPY workflow_scripts/protobuf/build_protobuf_unix.sh /tmp/build_protobuf_unix.sh
# RUN /tmp/build_protobuf_unix.sh $(nproc)

# Set the working directory
# WORKDIR /app

# # Install Python dependencies
# RUN python -m pip install -q --upgrade pip && \
#     python -m pip install -q -r requirements-release.txt

# # Copy the requirements file into the container
# COPY requirements-release.txt .

# # Copy the rest of the code into the container
# COPY . .

# Run the entrypoint script
# CMD ["bash", ".github/workflows/manylinux/entrypoint.sh"]

# docker build -t onnx.manylinux -f Dockerfiles/Dockerfile.manylinux .
# # docker run -it --rm onnx.manylinux bash # to check into the docker container
# to copy the wheel file out of the container:
# docker run -d --name onnx.manylinux.container onnx.manylinux
# docker cp onnx.manylinux.container:/app/dist/onnx-1.16.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl C:/LiqunWA/onnx-manylinux-wheels/
# docker rm -f onnx.manylinux.container
